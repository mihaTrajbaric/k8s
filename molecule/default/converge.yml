---
- name: Converge
  hosts: localhost
  connection: local

  collections:
    - sodalite.k8s
#
#  vars_files:
#    - vars/main.yml

  tasks:
    - name: Verify cluster is working.
      kubernetes.core.k8s_info:
        namespace: kube-system
        kind: Pod
      register: pod_list

    - name: Verify cluster has more than 5 pods running.
      assert:
        that: (pod_list.resources | count) > 5

    # Integration tests

    - name: Include namespace.yml
      include_tasks:
        file: tasks/namespace.yml
        apply:
          tags: [ namespace, k8s ]
      tags:
        - always

    - name: Include config_map.yml
      include_tasks:
        file: tasks/config_map.yml
        apply:
          tags: [ config_map, k8s ]
      tags:
        - always

    - name: Include secret.yml
      include_tasks:
        file: tasks/secret.yml
        apply:
          tags: [ secret, k8s ]
      tags:
        - always

    - name: Include pvc.yml
      include_tasks:
        file: tasks/pvc.yml
        apply:
          tags: [ pvc, k8s ]
      tags:
        - always

    - name: Include storage_class.yml
      include_tasks:
        file: tasks/storage_class.yml
        apply:
          tags: [ storage_class, k8s ]
      tags:
        - always

    - name: Include deployment.yml
      include_tasks:
        file: tasks/deployment.yml
        apply:
          tags: [ deployment, k8s ]
      tags:
        - always

    - name: Include service.yml
      include_tasks:
        file: tasks/service.yml
        apply:
          tags: [ sservice, k8s ]
      tags:
        - always

    - name: Include ingress.yml
      include_tasks:
        file: tasks/ingress.yml
        apply:
          tags: [ ingress, k8s ]
      tags:
        - always


#  roles:
#    - role: helm
#      tags:
#        - helm
#
#    - role: k8scopy
#      tags:
#        - copy
#        - k8s

#  post_tasks:
#    - name: Ensure namespace exists
#      kubernetes.core.k8s:
#        api_version: v1
#        kind: Namespace
#        name: inventory
#
#    - name: Add a deployment
#      kubernetes.core.k8s:
#        definition:
#          apiVersion: apps/v1
#          kind: Deployment
#          metadata:
#            name: inventory
#            namespace: inventory
#          spec:
#            replicas: 1
#            selector:
#              matchLabels:
#                app: "{{ k8s_pod_name }}"
#            template: "{{ k8s_pod_template }}"
#        wait: yes
#        wait_timeout: 120
#      vars:
#        k8s_pod_name: inventory
#        k8s_pod_image: python
#        k8s_pod_command:
#          - python
#          - '-m'
#          - http.server
#        k8s_pod_env:
#          - name: TEST
#            value: test
#
#    - meta: refresh_inventory
#
#- name: Verify inventory and connection plugins
#  hosts: namespace_inventory_pods
#  gather_facts: no
#
#  vars:
#    file_content: |
#      Hello world
#  tasks:
#    - name: End play if host not running (TODO should we not add these to the inventory?)
#      meta: end_host
#      when: pod_phase != "Running"
#
#    - debug: var=hostvars
#    - setup:
#
#    - debug: var=ansible_facts
#
#    - name: Assert the TEST environment variable was retrieved
#      assert:
#        that: ansible_facts.env.TEST == 'test'
#
#    - name: Copy a file into the host
#      copy:
#        content: '{{ file_content }}'
#        dest: /tmp/test_file
#
#    - name: Retrieve the file from the host
#      slurp:
#        src: /tmp/test_file
#      register: slurped_file
#
#    - name: Assert the file content matches expectations
#      assert:
#        that: (slurped_file.content|b64decode) == file_content
#
#- name: Delete inventory namespace
#  hosts: localhost
#  connection: local
#  gather_facts: no
#  tasks:
#    - name: Remove inventory namespace
#      k8s:
#        api_version: v1
#        kind: Namespace
#        name: inventory
#        state: absent